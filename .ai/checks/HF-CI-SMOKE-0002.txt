HF-CI-SMOKE-0002 GITHUB ACTIONS WORKFLOW EVIDENCE
==================================================

DATE: 2025-08-24
TIME: 19:30:00 UTC
HEAD SHA: 466fbe6

## IMPLEMENTED CHANGES

### 1. .github/workflows/smoke.yml - NEW WORKFLOW
- ✅ **Two jobs implemented:** `node-smoke` + `docker-e2e`
- ✅ **Node 20:** Aligned with package.json engines
- ✅ **pnpm 10.14.0:** Via corepack enable + prepare
- ✅ **Sequential execution:** docker-e2e waits for node-smoke
- ✅ **Artifact uploads:** smoke.log, health.json, home.head
- ✅ **Docker E2E:** Build, run, health check, teardown

## WORKFLOW STRUCTURE VERIFICATION

### Job: node-smoke
- **Runner:** ubuntu-latest
- **Steps:** checkout → setup-node → corepack → install → smoke → upload
- **Node version:** '20' (exact match with engines)
- **pnpm version:** 10.14.0 (exact match with packageManager)
- **Artifact:** node-smoke-log (smoke.log)

### Job: docker-e2e
- **Runner:** ubuntu-latest
- **Dependency:** needs: node-smoke
- **Steps:** checkout → build → run → health-wait → fetch → upload → teardown
- **Health check:** 30-second timeout with retry loop
- **Endpoints tested:** /api/health, /
- **Artifacts:** docker-e2e (health.json, home.head)
- **Cleanup:** Always runs teardown with logs capture

## TECHNICAL SPECIFICATIONS

### Corepack Integration
```yaml
- name: Enable corepack & pnpm
  run: |
    corepack enable
    corepack prepare pnpm@10.14.0 --activate
```

### Health Check Logic
```yaml
- name: Wait for health
  run: |
    for i in {1..30}; do
      if curl -fsS http://127.0.0.1:3000/api/health >/dev/null 2>&1; then
        echo "healthy"; exit 0; fi
      sleep 1
    done
    echo "timeout waiting for health"; docker logs mhv2; exit 1
```

### Artifact Management
- **node-smoke-log:** Contains full smoke test output
- **docker-e2e:** Contains health response + home page headers
- **Teardown:** Always captures container logs before cleanup

## COMPLIANCE

- [x] **≤1 dotyk dodržaný** ✅ (.github/workflows/smoke.yml)
- [x] **Node 20 alignment** ✅ (matches engines)
- [x] **pnpm 10.14.0 alignment** ✅ (matches packageManager)
- [x] **Two jobs implemented** ✅ (node-smoke + docker-e2e)
- [x] **Sequential execution** ✅ (docker-e2e needs node-smoke)
- [x] **Artifact uploads** ✅ (smoke.log, health.json, home.head)
- [x] **Docker E2E complete** ✅ (build, run, test, cleanup)

## YAML SNAPSHOT

```yaml
name: Smoke & Docker E2E
on:
  push:
  pull_request:
jobs:
  node-smoke:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - name: Enable corepack & pnpm
        run: |
          corepack enable
          corepack prepare pnpm@10.14.0 --activate
      - name: Install deps
        run: pnpm install --frozen-lockfile
      - name: Run smoke
        run: pnpm smoke | tee smoke.log
      - name: Upload smoke log
        uses: actions/upload-artifact@v4
        with:
          name: node-smoke-log
          path: smoke.log

  docker-e2e:
    runs-on: ubuntu-latest
    needs: node-smoke
    steps:
      - uses: actions/checkout@v4
      - name: Build Docker image
        run: docker build -t mastrohubv2:ci .
      - name: Run container
        run: docker run -d --name mhv2 -p 3000:3000 mastrohubv2:ci
      - name: Wait for health
        run: |
          for i in {1..30}; do
            if curl -fsS http://127.0.0.1:3000/api/health >/dev/null 2>&1; then
              echo "healthy"; exit 0; fi
            sleep 1
          done
          echo "timeout waiting for health"; docker logs mhv2; exit 1
      - name: Fetch health & home
        run: |
          curl -fsS http://127.0.0.1:3000/api/health | tee health.json
          curl -I    http://127.0.0.1:3000/        | tee home.head
      - name: Upload docker e2e artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-e2e
          path: |
            health.json
            home.head
      - name: Teardown
        if: always()
        run: |
          docker logs mhv2 || true
          docker rm -f mhv2 || true
```

## VERDICT

**GitHub Actions Workflow = READY** ✅

**Summary:**
- **Workflow structure:** ✅ Complete with two jobs
- **Node/pnpm alignment:** ✅ Matches package.json exactly
- **CI pipeline:** ✅ Sequential execution with dependencies
- **Docker E2E:** ✅ Complete build-test-cleanup cycle
- **Artifacts:** ✅ Comprehensive logging and test outputs
- **Error handling:** ✅ Timeout + cleanup + logs capture

**Final Verdict:** **CI pipeline je plne implementovaný a ready pre automatizované smoke testy + Docker E2E validáciu!**

RESULT: PASS ✅
