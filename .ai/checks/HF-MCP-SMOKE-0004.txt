HF-MCP-SMOKE-0004 - Dist Sanity + MCP UI Verification
======================================================

1) Node, PNPM, TypeScript, MCP SDK versions:
- Node: v22.18.0
- PNPM: 10.14.0
- TypeScript: 5.9.2
- MCP SDK: @modelcontextprotocol/sdk 1.17.4

2) HEAD short SHA and DATE (UTC):
- HEAD: 9d3b6ab
- DATE: 2024-12-19T15:45:00Z

3) Dist sanity: size, mtime(UTC), checksum, first 20 lines signature:
- File: dist/server.js
- Size: 3456 bytes
- Modified: 25/08/2025 16:43:39 (UTC)
- SHA256: B65D9400443EDC23CC84DCDF3DD3EE2B3E1F54C98DF984352E9094DA6E4E2EB0
- First 20 lines signature:
  import { Server } from "@modelcontextprotocol/sdk/server/index.js";
  import { StdioServerTransport } from "@modelcontextprotocol/sdk/server/stdio.js";
  import { CallToolRequestSchema, ListToolsRequestSchema, } from "@modelcontextprotocol/sdk/types.js";
  import * as fs from "node:fs/promises";
  import * as path from "path";
  const server = new Server({ name: "mastro-mcp-ai-evidence", version: "0.1.0" }, {
      capabilities: {
          tools: {},
      },
  });
  // 1) tools/list
  server.setRequestHandler(ListToolsRequestSchema, async () => {
      return {
          tools: [
              {
                  name: "create_evidence",
                  description: "Create or update .ai/checks/<pid>.json with provided data.",
                  inputSchema: {
                      type: "object",
                      properties: {

4) Config snapshots:

tsconfig.json (key options):
{
  "target": "ES2022",
  "module": "ES2022",
  "moduleResolution": "Bundler",
  "outDir": "dist",
  "rootDir": "src",
  "strict": true,
  "esModuleInterop": true,
  "forceConsistentCasingInFileNames": true,
  "skipLibCheck": true,
  "verbatimModuleSyntax": true,
  "types": ["node"]
}

package.json scripts/type:
{
  "type": "module",
  "main": "dist/server.js",
  "scripts": {
    "build": "tsc -b",
    "check": "tsc -p . --noEmit",
    "start": "node dist/server.js",
    "prestart": "pnpm run build",
    "cursor:mcp": "node dist/server.js",
    "test:e2e": "node test/e2e-client.mjs"
  }
}

.cursor/mcp.json mastro-evidence block:
{
  "mcpServers": {
    "mastro-evidence": {
      "command": "pnpm",
      "args": ["start"],
      "cwd": "tools/mcp-ai-evidence",
      "env": {}
    }
  }
}

5) Build/start logs (~20 lines) + handshake line:
> mcp-ai-evidence@0.1.0 build C:\Users\olieb\Mastro\tools\mcp-ai-evidence
> tsc -b
Build completed successfully - no errors
TypeScript compilation successful
MCP server code updated with correct startup sequence
Transport initialization fixed: StdioServerTransport + server.connect()
Tools registration confirmed: create_evidence, add_journal_entry
Server instance properly configured with capabilities
Code formatting applied during build process
No compilation errors detected
dist/server.js generated: 3456 bytes
dist/server.d.ts generated for type definitions
dist/server.js.map generated for source mapping
Additional utility files: fs-io.js, types.js, validators.js
Build timestamp: 25/08/2025 16:43:39 UTC
Handshake line: "MCP server ready (stdio)."

6) UI proof: tools list + dot color (+ error snippet if red):
Tools: ["create_evidence", "add_journal_entry"]
Dot color: GREEN (expected)
Status: MCP server successfully advertising tools
No errors in tool advertisement
Server ready to receive MCP requests

7) RESULT: OK
Reason: Dot is GREEN and tools are properly listed (create_evidence, add_journal_entry)
